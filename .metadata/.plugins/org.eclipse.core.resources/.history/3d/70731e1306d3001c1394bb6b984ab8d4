/*Cómo le decimos a esta clase que herede de otra clase?
 * 
 * public class Furgoneta extends Coche {
 * 
 *  ...
 *  ...
 *  ...
 * }
 * 
 * Ahora la clase Coche es superclase
 * 
 * 
 *   Coche     ---> Furgoneta
 * SuperClase  --->  SubClase
 * ClasePadre  --->  ClaseHijo
 * 
 * Java no admite la herencia multiple, es decir, que admita herencia de más de una clase
 * Para ello en Java se inventó el tema de las interfaces para suplir la herencia múltiple
 * 
 * */


public class Furgoneta extends Coche {
	
	//variables diferente de coche
	private int capacidadCarga;
	private int plazasExtra;
	
	//Estado inicial <- constructor
	
	public Furgoneta(int capacidadCarga, int plazasExtra) {
		
		//super() <- llama al constructor de la clase padre, osea de la superclase. De esta manera llama a la clase padre para heredear su estad inicial
		super();
		this.capacidadCarga = capacidadCarga;
		this.plazasExtra = plazasExtra; 
		
	}
	
}


// Si quiero ejecutar los estados inciales de la superclase con más de un argumento colocar entre paréntesis del super los argumentos super(arg1, arg2, arg3)
// Una cosa es la herencia y otra la ejecución. super no hereda eso se hace automaticamente, super permite su ejecución
//No puede haber herencias múltiples pero si herencias en cadena. Si una clase hereda de Furgonete hereda también las propiedades de Coche -> por cadena
















